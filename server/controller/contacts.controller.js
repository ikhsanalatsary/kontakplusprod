'use strict';

var _multer = require('multer');

var _multer2 = _interopRequireDefault(_multer);

var _multerSharp = require('multer-sharp');

var _multerSharp2 = _interopRequireDefault(_multerSharp);

var _contacts = require('../model/contacts.model');

var _contacts2 = _interopRequireDefault(_contacts);

var _config = require('../config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-param-reassign */
var storage = (0, _multerSharp2.default)({
  bucket: _config2.default.uploads.gcsUpload.bucket,
  projectId: _config2.default.uploads.gcsUpload.projectId,
  keyFilename: _config2.default.uploads.gcsUpload.keyFilename,
  acl: _config2.default.uploads.gcsUpload.acl,
  size: {
    width: 1296
  },
  max: true
});

exports.create = function (req, res) {
  var body = req.body;
  var contact = new _contacts2.default(body);

  contact.save(function (err) {
    if (err) return handleError(res, err);
    return res.sendStatus(200);
  });
};

exports.show = function (req, res) {
  var contactId = req.params.id;
  _contacts2.default.findById(contactId, function (err, contact) {
    if (err) return res.status(400).json(err);
    return res.status(200).json(contact);
  });
};

exports.index = function (req, res) {
  var query = {};
  if (req.query.favorite) query.favorite = Boolean(req.query.favorite);

  _contacts2.default.find(query, null, { sort: { name: 1 } }, function (err, contacts) {
    if (err) return res.sendStatus(404);
    if (contacts.length === 0) return res.sendStatus(404);
    return res.status(200).json(contacts);
  });
};

exports.update = function (req, res) {
  var body = req.body;
  _contacts2.default.findById(req.params.id, function (err, contact) {
    contact = Object.assign(contact, body);
    contact.save(function (err, result) {
      if (err) return res.status(400).json(err);
      return res.status(200).json(result);
    });
  });
};

exports.delete = function (req, res) {
  _contacts2.default.remove({ _id: req.params.id }, function (err) {
    if (err) return res.sendStatus(400);
    return res.sendStatus(200);
  });
};

exports.patch = function (req, res) {
  _contacts2.default.findById(req.params.id, function (err, contact) {
    contact.favorite = req.body.favorite;
    if (req.body.name) contact.name = req.body.name;

    contact.save(function (err, result) {
      if (err) return res.json(400, err);
      return res.status(200).json(result);
    });
  });
};

exports.upload = function (req, res) {
  // upload here
  var upload = (0, _multer2.default)({ storage: storage }).single('avatar');
  upload(req, res, function (uploadError) {
    if (uploadError) {
      res.status(400).json({ message: 'Something was wrong while upload' });
      return;
    }
    res.json({ avatar: req.file.path });
  });
};

function handleError(res, err) {
  return res.status(500).json(err);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,